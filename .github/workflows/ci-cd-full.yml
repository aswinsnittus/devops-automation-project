name: Full CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

permissions:
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🔹 STEP 1: Set up Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8  # ✅ or whatever version you use

      # 🔹 STEP 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 🔹 STEP 3: Initialize Terraform backend
      - name: Terraform Init
        run: terraform init -reconfigure \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="dynamodb_table=${{ secrets.TF_DYNAMODB_TABLE }}" \
          -backend-config="region=${{ env.AWS_REGION }}"

      # 🔹 STEP 4: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # 🔹 STEP 5: Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      # 🔹 STEP 6: Docker Login
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 🔹 STEP 7: Build & Push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:${{ github.sha }}

      - name: Docker Logout
        run: docker logout
