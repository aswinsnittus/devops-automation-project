name: Full CI/CD Pipeline (Build → Plan → Apply → Deploy)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:${{ github.sha }}

      - name: Logout
        run: docker logout

  terraform-plan:
    name: 🧠 Terraform Plan
    runs-on: ubuntu-latest
    needs: build-and-push
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="dynamodb_table=${{ secrets.TF_DYNAMODB_TABLE }}" -backend-config="region=us-east-1"

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan

  terraform-apply:
    name: 🚀 Terraform Apply (Deploy Infra)
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-plan
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: terraform/

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  deploy-app:
    name: 🔄 Deploy Docker App on EC2
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Get Terraform output (EC2 public IP)
        id: tf-output
        run: |
          sudo apt-get install -y unzip
          wget https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip
          unzip terraform_1.9.5_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -chdir=terraform output -raw public_ip > public_ip.txt
          echo "public_ip=$(cat public_ip.txt)" >> $GITHUB_ENV

      - name: Copy SSH key
        run: |
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: SSH into EC2 & deploy latest image
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$public_ip << 'EOF'
            sudo docker rm -f devops-ui 2>/dev/null || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:latest
            sudo docker run -d --name devops-ui --restart unless-stopped -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:latest
          EOF
