name: Full CI/CD (build → plan+apply → deploy)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build & push Docker image first
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:${{ github.sha }}

      - name: Docker logout
        run: docker logout

      # Ensure Terraform installed
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Initialize backend and downloads providers for linux_amd64
      - name: Terraform init (S3 backend)
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_DYNAMODB_TABLE }}" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -upgrade

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform validate
        run: terraform validate

      # CREATE plan here (in same runner)
      - name: Terraform plan (create plan here)
        run: terraform plan -out=tfplan -input=false

      # APPLY the same local plan we just created
      - name: Terraform apply (apply plan created above)
        run: terraform apply -input=false -auto-approve ./tfplan

      # Get public IP
      - name: Output public_ip
        id: out
        run: echo "public_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

      # Deploy container on the created EC2 using SSH (optional)
      - name: Copy SSH key
        run: |
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy on EC2 (pull image & run)
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ steps.out.outputs.public_ip }} << 'EOF'
            sudo docker rm -f devops-ui || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:latest
            sudo docker run -d --name devops-ui --restart unless-stopped -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/devops-ui:latest
          EOF
